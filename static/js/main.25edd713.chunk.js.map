{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FormComponents/InputField.jsx","components/FormComponents/TextareaField.jsx","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","InputField","this","props","value","placeholder","name","addInfo","error","errorText","type","onChange","autoComplete","style","visibility","color","PureComponent","TextareaField","NewMovie","state","titleError","descriptionError","imgUrlError","imdbUrlError","imdbIdError","event","target","getAttribute","errorName","setState","formSubmit","preventDefault","replace","addMovie","onSubmit","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25edd713.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class InputField extends PureComponent {\n  render() {\n    const { value, placeholder, name, addInfo, error, errorText } = this.props;\n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder={placeholder}\n          value={value}\n          name={name}\n          onChange={addInfo}\n          autoComplete=\"off\"\n        />\n\n        <div style={{\n          visibility: error ? 'visible' : 'hidden',\n          color: 'red',\n        }}\n        >\n          {errorText}\n        </div>\n      </div>\n    );\n  }\n}\n\nInputField.propTypes = {\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  addInfo: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  errorText: PropTypes.string.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class TextareaField extends PureComponent {\n  render() {\n    const { value, placeholder, name, addInfo, error, errorText } = this.props;\n\n    return (\n      <div>\n        <textarea\n          className=\"textarea\"\n          placeholder={placeholder}\n          value={value}\n          name={name}\n          onChange={addInfo}\n        />\n\n        <div style={{\n          visibility: error ? 'visible' : 'hidden',\n          color: 'red',\n        }}\n        >\n          {errorText}\n        </div>\n      </div>\n    );\n  }\n}\n\nTextareaField.propTypes = {\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  addInfo: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  errorText: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '../FormComponents/InputField';\nimport { TextareaField } from '../FormComponents/TextareaField';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n\n    titleError: false,\n    descriptionError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n  };\n\n  addInfo = (event) => {\n    const name = event.target.getAttribute('name');\n    const errorName = `${name}Error`;\n\n    this.setState({\n      [name]: event.target.value,\n      [errorName]: false,\n    });\n  };\n\n  formSubmit = (event) => {\n    event.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState({\n      titleError: !title.replace(/\\s/g, ''),\n      descriptionError: !description.replace(/\\s/g, ''),\n      imgUrlError: !imgUrl.replace(/\\s/g, ''),\n      imdbUrlError: !imdbUrl.replace(/\\s/g, ''),\n      imdbIdError: !imdbId.replace(/\\s/g, ''),\n    });\n\n    if (!title.replace(/\\s/g, '')) {\n      return;\n    }\n\n    if (!description.replace(/\\s/g, '')) {\n      return;\n    }\n\n    if (!imgUrl.replace(/\\s/g, '')) {\n      return;\n    }\n\n    if (!imdbUrl.replace(/\\s/g, '')) {\n      return;\n    }\n\n    if (!imdbId.replace(/\\s/g, '')) {\n      return;\n    }\n\n    this.props.addMovie(movie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      titleError,\n      descriptionError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.formSubmit}>\n        <InputField\n          value={title}\n          placeholder=\"Enter movie title\"\n          name=\"title\"\n          addInfo={this.addInfo}\n          error={titleError}\n          errorText=\"Please enter title\"\n        />\n\n        <TextareaField\n          value={description}\n          placeholder=\"Enter movie description\"\n          name=\"description\"\n          addInfo={this.addInfo}\n          error={descriptionError}\n          errorText=\"Please enter description\"\n        />\n\n        <InputField\n          value={imgUrl}\n          placeholder=\"Add movie image link\"\n          name=\"imgUrl\"\n          addInfo={this.addInfo}\n          error={imgUrlError}\n          errorText=\"Please add movie image link\"\n        />\n\n        <InputField\n          value={imdbUrl}\n          placeholder=\"Add link to movie\"\n          name=\"imdbUrl\"\n          addInfo={this.addInfo}\n          error={imdbUrlError}\n          errorText=\"Please add link to the movie\"\n        />\n\n        <InputField\n          value={imdbId}\n          placeholder=\"Add movie IMDb Id\"\n          name=\"imdbId\"\n          addInfo={this.addInfo}\n          error={imdbIdError}\n          errorText=\"Please add movie IMDb Id\"\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}